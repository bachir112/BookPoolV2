@using BookPool.DataObjects.DTO
@using BookPool.DataObjects.EDM
@using System;
@using System.Globalization;

@{
    ViewBag.Title = "MyOrders";
    Layout = "~/Views/Shared/_Layout_Out.cshtml";

    List<BookPoolResult> myBooks = new List<BookPoolResult>();
    if (ViewBag.MyBooks != null)
    {
        myBooks = ViewBag.MyBooks as List<BookPoolResult>;
        myBooks = myBooks.OrderByDescending(x => x.PostedOn).Select(x => x).ToList();
    }

    List<Category> categories = new List<Category>();
    if (ViewBag.Categories != null)
    {
        categories = ViewBag.Categories as List<Category>;
    }

    List<Condition> conditions = new List<Condition>();
    if (ViewBag.Conditions != null)
    {
        conditions = ViewBag.Conditions as List<Condition>;
    }

    List<Language> languages = new List<Language>();
    if (ViewBag.Languages != null)
    {
        languages = ViewBag.Languages as List<Language>;
    }

    AspNetUser aspNetUser = new AspNetUser();
    if (ViewBag.AspNetUser != null)
    {
        aspNetUser = ViewBag.AspNetUser as AspNetUser;
    }

    List<BookPoolResult> books = new List<BookPoolResult>();
    if (ViewBag.Books != null)
    {
        books = ViewBag.Books as List<BookPoolResult>;
    }

    List<Institution> AvailableInstitutions = ViewBag.Institutions as List<Institution>;

    //Institution AllUniversities = new Institution();
    //AllUniversities.ID = -1;
    //AllUniversities.InstitutionName = "All Universities";
    //AllUniversities.InstitutionCode = string.Empty;
    //AllUniversities.InstitutionType = "section";
    //AvailableInstitutions.Add(AllUniversities);

    //Institution AllSchools = new Institution();
    //AllSchools.ID = -2;
    //AllSchools.InstitutionName = "All Schools";
    //AllSchools.InstitutionCode = string.Empty;
    //AllSchools.InstitutionType = "section";
    //AvailableInstitutions.Add(AllSchools);

    var UniversityGroup = new SelectListGroup { Name = "Universities" };
    var SchoolGroup = new SelectListGroup { Name = "Schools" };
    var SectionGroup = new SelectListGroup { Name = "Sections" };

    List<SelectListItem> AvailableInstitutionsList = new List<SelectListItem>();

    List<SelectListItem> AllSectionsList = AvailableInstitutions.Where(x => x.InstitutionType == "section").OrderBy(x => x.ID).Select(x => x).ToList()
        .ConvertAll(x =>
        {
            return new SelectListItem()
            {
                Text = x.InstitutionName,
                Value = x.ID.ToString(),
                Selected = x.ID == -1 ? true : false,
                Group = SectionGroup
            };
        });

    List<SelectListItem> AvailableUniversitiesList = AvailableInstitutions.Where(x => x.InstitutionType == "university").OrderBy(x => x.ID).Select(x => x).ToList()
        .ConvertAll(x =>
        {
            return new SelectListItem()
            {
                Text = x.InstitutionName + ", " + x.InstitutionCode,
                Value = x.ID.ToString(),
                Selected = false,
                Group = UniversityGroup
            };
        });

    List<SelectListItem> AvailableSchoolsList = AvailableInstitutions.Where(x => x.InstitutionType == "school").OrderBy(x => x.ID).Select(x => x).ToList()
        .ConvertAll(x =>
        {
            return new SelectListItem()
            {
                Text = x.InstitutionName,
                Value = x.ID.ToString(),
                Selected = false,
                Group = SchoolGroup
            };
        });

    AvailableInstitutionsList.AddRange(AllSectionsList);
    AvailableInstitutionsList.AddRange(AvailableUniversitiesList);
    AvailableInstitutionsList.AddRange(AvailableSchoolsList);

    List<Cours> AvailableCourses = ViewBag.Courses as List<Cours>;

    //Cours AllUniversityCourses = new Cours();
    //AllUniversityCourses.ID = -1;
    //AllUniversityCourses.CourseName = "All Classes";
    //AllUniversityCourses.CourseDescription = "university";
    //AvailableCourses.Add(AllUniversityCourses);

    //Cours AllSchoolCourses = new Cours();
    //AllSchoolCourses.ID = -2;
    //AllSchoolCourses.CourseName = "All Classes";
    //AllSchoolCourses.CourseDescription = "school";
    //AvailableCourses.Add(AllSchoolCourses);

    List<SelectListItem> AvailableCoursesUniversities = AvailableCourses.Where(x => x.CourseDescription == "university").Select(x => x).ToList()
        .ConvertAll(x =>
        {
            return new SelectListItem()
            {
                Text = x.ID == -1 ? x.CourseName : x.CourseName,
                Value = x.ID.ToString(),
                Selected = x.ID == -1 ? true : false
            };
        });

    List<SelectListItem> AvailableCoursesSchools = AvailableCourses.Where(x => x.CourseDescription == "school").OrderBy(x => x.ID).Select(x => x).ToList()
    .ConvertAll(x =>
    {
        return new SelectListItem()
        {
            Text = x.CourseName,
            Value = x.ID.ToString(),
            Selected = x.ID == -2 ? true : false
        };
    });
}

<style>
    .tabs .tab a:hover, .tabs .tab a.active {
        border-left: 0px;
    }

    .tabs-content.carousel.carousel-slider{
        height:500px!important;
    }

    #bookInfo{
        height:500px!important;
    }

    .carousel {
        height: 400px !important;
    }

        .carousel .carousel-item {
            width: 100% !important;
        }

        .carousel.carousel-slider .carousel-item {
            overflow: auto;
        }

    .dropdown-content.select-dropdown {
        max-height: 300px;
    }

    #findMyBooksResult ul {
        list-style-type: none;
    }

    #findMyBooksResult li {
        display: inline-block;
    }

    #findMyBooksResult input[type="checkbox"][id^="myCheckbox"] {
        display: none;
    }

    #findMyBooksResult label {
        border: 1px solid #fff;
        padding: 10px;
        display: block;
        position: relative;
        margin: 10px;
        cursor: pointer;
    }

        #findMyBooksResult label:before {
            background-color: white;
            color: white;
            content: " ";
            display: block;
            border-radius: 50%;
            border: 1px solid grey;
            position: absolute;
            top: -5px;
            left: -5px;
            width: 25px;
            height: 25px;
            text-align: center;
            line-height: 28px;
            transition-duration: 0.4s;
            transform: scale(0);
        }

        #findMyBooksResult label img {
            height: 150px !important;
            width: 100px !important;
            transition-duration: 0.2s;
            transform-origin: 50% 50%;
        }

    #findMyBooksResult :checked + label {
        border-color: #ddd;
    }

        #findMyBooksResult :checked + label:before {
            content: "✓";
            background-color: grey;
            transform: scale(1);
        }

        #findMyBooksResult :checked + label img {
            transform: scale(0.9);
            /* box-shadow: 0 0 5px #333; */
            z-index: -1;
        }

    #institutionsContainer .select-dropdown.dropdown-trigger{
        display:none!important;
    }

    #searchCoursesUniversitiesContainer .select-dropdown.dropdown-trigger {
        display: none !important;
    }

    #searchCoursesSchoolsContainer .select-dropdown.dropdown-trigger {
        display: none !important;
    }

    #bookCategoryContainer .select-dropdown.dropdown-trigger {
        display: none !important;
    }

    #languagesContainer .select-dropdown.dropdown-trigger {
        display: none !important;
    }

    #isAcademicContainer .select-dropdown.dropdown-trigger {
        display: none !important;
    }

    .select2-search__field {
        height: 30px !important;
    }

    .select2 {
        width: 100% !important;
    }
</style>

<div id="errorsModal" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4>Could not post book for sale</h4>
        <div id="errorText">

        </div>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-green btn-flat red" style="color:white;">Okay</a>
    </div>
</div>

<div id="mainSearchBar" style="background: white; height: 55px; display: none;" class="">
    <div class="row searchBar">
        <div class="col s12 m12 l12">
            <div class="sectionnav">
                <div class="nav-wrapper">
                    <form>
                        <div class="input-field" style="margin-top: 5px; ">
                            <input id="search" type="search" required="" placeholder="What are you browsing for?">
                            <label class="label-icon active" for="search">
                                <i class="material-icons" style="color:var(--primaryGrey) !important">search</i>
                            </label>
                            <i class="material-icons" style="color:var(--primaryGrey) !important">close</i>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>

@Html.Partial("_Filter")

<div class="row itemslist container">

    <div class="col s12 m12 l12" style="margin-top:30px;">
        <h5>
            Contact Phone Number
            <i class="material-icons" style="color: red;">phone</i>
        </h5>
        <span style="color:red;">Enter a valid phone number so Bookpool can contact you to deliver your book when it's sold</span>
        <hr />
        <div class="input-field col s12" style="padding:0!important;">
            <input id="phoneNumber" type="text" class="validate" value="@aspNetUser.PhoneNumber">
            <label for="phoneNumber" style="left:0;">Phone Number</label>
        </div>
        <div class="col s12" style="padding:0px;">
            <button id="saveUserID" type="button" class="waves-effect waves-light btn-small modal-trigger red" style="float:right;">
                Save Phone Number
            </button>
        </div>
    </div>

    <div class="col s12 m12 l12" style="margin-top:30px;">
        <h5>
            MY BOOKS - Books i want to sell
            <i class="material-icons" style="color: red;">library_books</i>
        </h5>
        <hr />
    </div>

    <div class="col s12 m12 l12" style="margin-bottom:30px; max-height:500px; overflow:auto;">
        @{
            if (myBooks.Count() == 0)
            {
                <h6>
                    You still haven't added any book to sell, please add books that you have finished reading.
                </h6>
            }
            foreach (var book in myBooks)
            {
                <div class="col s12 m12 l12" style="padding:0px!important;">
                    @Html.Partial("_MyBook", book)
                    <hr />
                </div>
            }
        }
    </div>

    <div class="col s12 m12 l12" style="margin-bottom:30px;">
        <h5 id="sellABookHeader" style="cursor:pointer;" data-IsVisible="True">
            <i class="material-icons left red-text">add_circle_outline</i>
            Sell a book
        </h5>

        <div id="sellABookContainer" style="margin-top:30px;">

            <ul id="sellMyBookTabs" class="tabs">
                <li class="tab col s3" style="padding:0!important;">
                    <a href="#chooseBook" style="padding:0!important;">
                        Book
                    </a>
                </li>
                <li class="tab col s3" style="padding:0!important;">
                    <a href="#bookInfo" style="padding:0!important;">
                        Info
                    </a>
                </li>
                <li class="tab col s3" style="padding:0!important;">
                    <a href="#pricing" style="padding:0!important;">
                        Pricing
                    </a>
                </li>
            </ul>

            <div class="tabs-wrap">
                <div id="chooseBook" class="col s12" style="padding:0!important; padding-top:20px!important;">
                    <input id="findMyBookValue" style="border-bottom:1px solid white!important;" placeholder="Find & Select Your Book" class="input-field" />
                    <div style="float:left;width: 100%;padding-right: 15px;">
                        <a id="findMyBook" class="waves-effect waves-light btn-large pull-right red">
                            <i class="material-icons left">location_searching</i>
                            Find
                        </a>
                    </div>
                    <div id="findMyBooksResult">

                    </div>
                </div>
                <div id="bookInfo" class="col s12" style="padding:0!important; padding-top:20px!important;">
                    <div style="float:left;width: 100%;padding-right: 15px;">
                        <h5 class="screen-reader-text">Language</h5>
                        <div id="languagesContainer">
                            <select id="bookLanguage">
                                @{
                                    foreach (var language in languages)
                                    {
                                        <option value="@language.ID">@language.LanguageName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div style="float:left;width: 100%;padding-right: 15px;">
                        <h5 class="screen-reader-text">Is it a book you used at school or university?</h5>
                        <div id="isAcademicContainer">
                            <select id="academic">
                                <option value="false">Non Academic - Not a university or school book</option>
                                <option value="true">Academic - A university or school book</option>
                            </select>
                        </div>
                    </div>
                    <div id="selectInstitutionsContainer" style="float:left;width: 100%;padding-right: 15px; display:none;">
                        <h5 class="screen-reader-text">Academical institution</h5>
                        <div id="institutionsContainer">
                            @Html.DropDownList("searchUniversities", AvailableInstitutionsList, new { @style = "width:100%;", @name = "university" })
                        </div>
                    </div>
                    <div id="selectCoursesContainer" style="float:left;width: 100%;padding-right: 15px; display:none;">
                        <h5 class="screen-reader-text">Class</h5>
                        <div id="searchCoursesUniversitiesContainer" style="display:none;">
                            @Html.DropDownList("searchCoursesUniversities", AvailableCoursesUniversities, new { @name = "course" })
                        </div>
                        <div id="searchCoursesSchoolsContainer" style="display:none;">
                            @Html.DropDownList("searchCoursesSchools", AvailableCoursesSchools, new { @name = "course" })
                        </div>
                    </div>
                    <div style="float:left;width: 100%;padding-right: 15px;">
                        <h5 class="screen-reader-text">Category</h5>
                        <div id="bookCategoryContainer">
                            <select id="bookCategory">
                                @{
                                    foreach (var category in categories)
                                    {
                                        <option value="@category.ID">@category.CategoryName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div style="float:left;width: 100%;padding-right: 15px; margin-top:20px;">
                        <a id="goToPricing" class="waves-effect waves-light btn-large pull-right red">
                            Next
                        </a>
                    </div>
                </div>
                <div id="pricing" class="col s12" style="padding:0!important; padding-top:20px!important;">
                    <div style="float:left;width: 100%;padding-right: 15px;">
                        <select id="bookCondition">
                            <option value="">Condition</option>
                            @{
                                foreach (var condition in conditions)
                                {
                                    <option value="@condition.ID">@condition.ConditionName</option>
                                }
                            }
                        </select>
                    </div>
                    <div style="float:left;width: 100%;padding-right: 15px;">
                        <input id="bookPrice" type="number" style="border-bottom:1px solid #9e9e9e!important;" placeholder="The price you wish to sell it for in Lebanese Pounds" class="input-field" />
                    </div>
                    <div style="float:left;width: 100%;padding-right: 15px;">
                        <a id="createAvailableBook" class="waves-effect waves-light btn-large pull-right red">
                            <i class="material-icons left">add_circle_outline</i>
                            Sell
                        </a>
                    </div>
                </div>
            </div>

        </div>

    </div>


</div>

<script type="text/javascript">

    $(document).ready(function () {
        $('ul.tabs').tabs({
            swipeable: true//,
            //responsiveThreshold: 1920
        });

        $('#errorsModal').modal();
    });

    $(document).on('click', '#sellABookHeader', function () {
        var showing = $(this).attr('data-IsVisible');
        if (showing == "True") {
            $('#sellABookContainer').fadeOut("slow");
            $(this).attr('data-IsVisible','False');
        } else {
            $('#sellABookContainer').fadeIn("slow");
            $(this).attr('data-IsVisible', 'True');
        }
    });

    $(document).on('click', '#goToPricing', function () {
        $('ul.tabs').tabs('select', 'pricing');
    });

    $(document).on('click', '.booksCheckbox', function () {
        $('ul.tabs').tabs('select', 'bookInfo');
    });

    $(document).on('change', '.booksCheckbox', function () {
        $(".booksCheckbox").prop('checked', false);
        $(this).prop('checked', true);
    });

    $(document).on('click', '.deleteMyBook', function () {

        var myBookID = $(this).attr('data-BookID');

        $.ajax({
            url: '@Url.Action("DeleteMyBook","Home")',
            type: 'POST',
            dataType: 'json',
            data: {
                MyBookID: myBookID
            },
            success: function (data) {
                location.reload();
            },
            error: function (request, error) {
                location.reload();
            }
        });
    });

    function checkForErrors() {
        var googleID = $('.booksCheckbox:checked').val();
        var bookName = $('.booksCheckbox:checked').attr('data-BookName');
        var price = $('#bookPrice').val();
        var condition = $('#bookCondition').val();
        var category = $('#bookCategory').val();
        var language = $('#bookLanguage').val();
        var academic = $('#academic').val();

        var errorHtml = '';

        var openErrorModal = false;
        if (!googleID || !bookName) {
            openErrorModal = true;
            errorHtml += "<p>Please choose a book.</p>";
        }

        if (!price) {
            openErrorModal = true;
            errorHtml += "<p>Please set the book's price.</p>";
        }

        if (!condition) {
            openErrorModal = true;
            errorHtml += "<p>Please set the book's condition.</p>";
        }

        if (!category) {
            openErrorModal = true;
            errorHtml += "<p>Please set the book's category.</p>";
        }

        if (!language) {
            openErrorModal = true;
            errorHtml += "<p>Please set the book's language.</p>";
        }

        if (!academic) {
            openErrorModal = true;
            errorHtml += "<p>Please set the book's academic status.</p>";
        }

        if (openErrorModal) {
            $('#errorText').html(errorHtml);
            $('#errorsModal').modal('open');
        }

        return openErrorModal;
    }

    function isHidden(el) {
        var style = window.getComputedStyle(el);
        return (style.display === 'none')
    }

    $(document).on('click', '#createAvailableBook', function () {
        var googleID = $('.booksCheckbox:checked').val();
        var bookName = $('.booksCheckbox:checked').attr('data-BookName');
        var price = $('#bookPrice').val();
        var condition = $('#bookCondition').val();
        var category = $('#bookCategory').val();
        var language = $('#bookLanguage').val();
        var academic = $('#academic').val();

        var institution = '';
        var selectInstitutionsContainer = document.getElementById('selectInstitutionsContainer');
        if (!isHidden(selectInstitutionsContainer)) {
            institution = $('#searchUniversities').val();
        }

        var institutionType = '';
        var course = '';
        var universityCourses = document.getElementById('searchCoursesUniversitiesContainer');
        if (!isHidden(universityCourses)) {
            course = $('#searchCoursesUniversities').val();
            institutionType = 'university';
        }
        var schoolCourses = document.getElementById('searchCoursesSchoolsContainer');
        if (!isHidden(schoolCourses)) {
            course = $('#searchCoursesSchools').val();
            institutionType = 'school';
        }

        if (academic == 'false') {
            institution = '';
            course = '';
        }

        var openErrorModal = checkForErrors();

        if (openErrorModal) {
            return;
        }

        $.ajax({
            url: '@Url.Action("SellMyBook","Home")',
            type: 'POST',
            dataType: 'json',
            data: {
                googleID: googleID,
                bookName: bookName,
                price: price,
                condition: condition,
                category: category,
                language: language,
                academic: academic,
                institution: institution,
                course: course,
                institutionType: institutionType
            },
            success: function (data) {
                location.reload();
            },
            error: function (request, error) {
                location.reload();
            }
        });
    });

    $(document).on('click', '#findMyBook', function () {
        var findMyBookValue = $('#findMyBookValue').val();

        $.ajax({
            url: '@Url.Action("FindMyBook","Home")?query=' + findMyBookValue,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                console.log('success');
                console.log(data);

                var html = '<ul style="text-align:center;">';
                $.each(data, function (key, value) {
                    console.log(value);
                    console.log(value.Authors);
                    html += '<li>';
                    html += '<input class="booksCheckbox" type="checkbox" id="' + value.GoogleID + '" value="' + value.GoogleID + '" data-BookName="' + value.BookName + '"/>';
                    html += '<label for="' + value.GoogleID + '"><img src="' + value.ImageURL + '" /></label>';
                    //html += '<p>' + value.BookName + '</p>';
                    //html += '<p>By ' + value.Authors + '</p>';
                    html += '</li>';
                });
                html += '</ul>';
                $('#findMyBooksResult').html(html);
            },
            error: function (request, error) {
                console.log('error');
                console.log(error);
            }
        });

    });

    $(document).on('change', '#academic', function () {
        var academicOrNot = $('#academic').val();

        if (academicOrNot == 'true') {
            $('#selectInstitutionsContainer').show();
            $('#selectCoursesContainer').show();
            $('#searchCoursesUniversitiesContainer').show();
        } else {
            $('#selectInstitutionsContainer').hide();
            $('#selectCoursesContainer').hide();
            $('#searchCoursesUniversitiesContainer').hide();
        }
    });

    $(document).on('change', '#searchUniversities', function () {
        var label = $('#searchUniversities :selected').parent().attr('label');
        var selectedValue = $('#searchUniversities').val();
        if (label == "Universities" || selectedValue == -1) {
            $('#searchCoursesSchoolsContainer').hide();
            $('#searchCoursesCertificatesContainer').hide();
            $('#searchCoursesUniversitiesContainer').show();
        } else if (label == "Schools" || selectedValue == -2) {
            $('#searchCoursesUniversitiesContainer').hide();
            $('#searchCoursesCertificatesContainer').hide();
            $('#searchCoursesSchoolsContainer').show();
        } else if (label == "Certificates" || selectedValue == -3) {
            $('#searchCoursesUniversitiesContainer').hide();
            $('#searchCoursesSchoolsContainer').hide();
            $('#searchCoursesCertificatesContainer').show();
        }
    });

    $(document).ready(function () {
        $('#searchUniversities').select2();
        $('#searchCoursesUniversities').select2();
        $('#searchCoursesSchools').select2();
        $('#bookCategory').select2();
        $('#bookLanguage').select2();
        $('#academic').select2();
    });

    $(document).on('click', '#saveUserID', function () {

        var phoneNumber = $('#phoneNumber').val();

        $.ajax({
            url: '@Url.Action("UpdateUserPhoneNumber", "Account")',
            type: 'POST',
            dataType: 'json',
            data: {
                PhoneNumber: phoneNumber
            },
            success: function (data) {
                location.reload();
            },
            error: function (request, error) {
                location.reload();
            }
        });
    });

</script>